// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageDocumentForm renders  component 1`] = `
<ForwardRef(Grid)
  container={true}
  spacing={3}
>
  <ForwardRef(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Image information"
    >
      <ForwardRef(Grid)
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <Field
            autoFocus={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "FormHelperTextProps": [Function],
                  "InputLabelProps": [Function],
                  "InputProps": [Function],
                  "SelectProps": [Function],
                  "autoComplete": [Function],
                  "autoFocus": [Function],
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "color": [Function],
                  "defaultValue": [Function],
                  "disabled": [Function],
                  "error": [Function],
                  "fullWidth": [Function],
                  "help": [Function],
                  "helperText": [Function],
                  "id": [Function],
                  "inputProps": [Function],
                  "inputRef": [Function],
                  "label": [Function],
                  "margin": [Function],
                  "maxRows": [Function],
                  "minRows": [Function],
                  "multiline": [Function],
                  "name": [Function],
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "placeholder": [Function],
                  "required": [Function],
                  "rows": [Function],
                  "select": [Function],
                  "size": [Function],
                  "sx": [Function],
                  "textFieldId": [Function],
                  "type": [Function],
                  "value": [Function],
                  "variant": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Title"
            multiline={true}
            name="rek_title"
            placeholder="Title of image"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "FormHelperTextProps": [Function],
                  "InputLabelProps": [Function],
                  "InputProps": [Function],
                  "SelectProps": [Function],
                  "autoComplete": [Function],
                  "autoFocus": [Function],
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "color": [Function],
                  "defaultValue": [Function],
                  "disabled": [Function],
                  "error": [Function],
                  "fullWidth": [Function],
                  "help": [Function],
                  "helperText": [Function],
                  "id": [Function],
                  "inputProps": [Function],
                  "inputRef": [Function],
                  "label": [Function],
                  "margin": [Function],
                  "maxRows": [Function],
                  "minRows": [Function],
                  "multiline": [Function],
                  "name": [Function],
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "placeholder": [Function],
                  "required": [Function],
                  "rows": [Function],
                  "select": [Function],
                  "size": [Function],
                  "sx": [Function],
                  "textFieldId": [Function],
                  "type": [Function],
                  "value": [Function],
                  "variant": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="DOI"
            name="fez_record_search_key_doi.rek_doi"
            placeholder="Enter a valid DOI (e.g. 10.123/456)"
            textFieldId="rek-doi"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </ForwardRef(Grid)>
        <ForwardRef(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Date created"
            floatingTitleRequired={true}
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "FormHelperTextProps": [Function],
                  "InputLabelProps": [Function],
                  "InputProps": [Function],
                  "SelectProps": [Function],
                  "autoComplete": [Function],
                  "autoFocus": [Function],
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "color": [Function],
                  "defaultValue": [Function],
                  "disabled": [Function],
                  "error": [Function],
                  "fullWidth": [Function],
                  "help": [Function],
                  "helperText": [Function],
                  "id": [Function],
                  "inputProps": [Function],
                  "inputRef": [Function],
                  "label": [Function],
                  "margin": [Function],
                  "maxRows": [Function],
                  "minRows": [Function],
                  "multiline": [Function],
                  "name": [Function],
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "placeholder": [Function],
                  "required": [Function],
                  "rows": [Function],
                  "select": [Function],
                  "size": [Function],
                  "sx": [Function],
                  "textFieldId": [Function],
                  "type": [Function],
                  "value": [Function],
                  "variant": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Abstract"
            multiline={true}
            name="rek_description"
            placeholder="Provide an abstract or summary of the work."
            rows={3}
            type="text"
          />
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
    </StandardCard>
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Creators"
    >
      <ForwardRef(Typography)>
        Please provide a list of creators (e.g. producer or performer if self-produced) and then select your name from the list.
      </ForwardRef(Typography)>
      <Field
        component={[Function]}
        contributorEditorId="creators"
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButton": "Add creator",
                "creatorRoleHint": "Select role from list or type the role of the creator in relation to the dataset",
                "creatorRoleLabel": "Enter creator's role",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of creators below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of creators below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "creators-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Creator's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier",
                "nameColumn": "Creator's name as published",
                "reorderColumn": "Reorder items",
                "roleColumn": "Creator's role",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this creator ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed creator",
                "unselectedHint": "Select this to confirm this creator is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Optional information"
    >
      <ForwardRef(Grid)
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "FormHelperTextProps": [Function],
                  "InputLabelProps": [Function],
                  "InputProps": [Function],
                  "SelectProps": [Function],
                  "autoComplete": [Function],
                  "autoFocus": [Function],
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "color": [Function],
                  "defaultValue": [Function],
                  "disabled": [Function],
                  "error": [Function],
                  "fullWidth": [Function],
                  "help": [Function],
                  "helperText": [Function],
                  "id": [Function],
                  "inputProps": [Function],
                  "inputRef": [Function],
                  "label": [Function],
                  "margin": [Function],
                  "maxRows": [Function],
                  "minRows": [Function],
                  "multiline": [Function],
                  "name": [Function],
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "placeholder": [Function],
                  "required": [Function],
                  "rows": [Function],
                  "select": [Function],
                  "size": [Function],
                  "sx": [Function],
                  "textFieldId": [Function],
                  "type": [Function],
                  "value": [Function],
                  "variant": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Add any additional information here."
            rows={1}
            type="text"
          />
        </ForwardRef(Grid)>
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "FormHelperTextProps": [Function],
                  "InputLabelProps": [Function],
                  "InputProps": [Function],
                  "SelectProps": [Function],
                  "autoComplete": [Function],
                  "autoFocus": [Function],
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "color": [Function],
                  "defaultValue": [Function],
                  "disabled": [Function],
                  "error": [Function],
                  "fullWidth": [Function],
                  "help": [Function],
                  "helperText": [Function],
                  "id": [Function],
                  "inputProps": [Function],
                  "inputRef": [Function],
                  "label": [Function],
                  "margin": [Function],
                  "maxRows": [Function],
                  "minRows": [Function],
                  "multiline": [Function],
                  "name": [Function],
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "placeholder": [Function],
                  "required": [Function],
                  "rows": [Function],
                  "select": [Function],
                  "size": [Function],
                  "sx": [Function],
                  "textFieldId": [Function],
                  "type": [Function],
                  "value": [Function],
                  "variant": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link"
            name="rek_link"
            placeholder="Enter URL for this work."
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
    </StandardCard>
  </ForwardRef(Grid)>
</ForwardRef(Grid)>
`;
