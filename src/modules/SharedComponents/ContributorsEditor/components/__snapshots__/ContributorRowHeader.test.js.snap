// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component ContributorRowHeader header for contributor editor control with all options 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <br />
  Step 2 - Select your name from the list below
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": "header",
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm={4}
        xs={12}
      >
        <ForwardRef(ListItemText)
          secondary="UQ identifier / Organisation"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
          sx={
            Object {
              "display": Object {
                "sm": "block",
                "xs": "none",
              },
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      />
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "right paddingRight40",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={false}
        disableHoverListener={false}
        disableTouchListener={false}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={false}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`Component ContributorRowHeader header for contributor editor control with delete all disabled 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": "header",
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      />
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "right paddingRight40",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={true}
        disableHoverListener={true}
        disableTouchListener={true}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={true}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`Component ContributorRowHeader header for contributor editor control with name and delete all button only 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": "header",
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      />
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "right paddingRight40",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={false}
        disableHoverListener={false}
        disableTouchListener={false}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={false}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`Component ContributorRowHeader header for creator role 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": "header",
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      >
        <ForwardRef(ListItemText)
          secondary="Role"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
          sx={
            Object {
              "display": Object {
                "sm": "block",
                "xs": "none",
              },
            }
          }
        />
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "right paddingRight40",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={false}
        disableHoverListener={false}
        disableTouchListener={false}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={false}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`Component ContributorRowHeader should display infinite class 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      />
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "undefined test-class-1",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={false}
        disableHoverListener={false}
        disableTouchListener={false}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={false}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`Component ContributorRowHeader should have a proper style generator 1`] = `
Object {
  "header": Object {
    "borderBottom": "1px solid rgba(0, 0, 0, 0.2)",
    "marginTop": 8,
  },
  "infinitePaddingRight": Object {
    "paddingRight": 36,
  },
  "paddingRight": Object {
    "paddingRight": 40,
  },
  "paddingRightEdit": Object {
    "paddingRight": 78,
  },
  "right": Object {
    "textAlign": "right",
  },
}
`;

exports[`Component ContributorRowHeader should use extra padding if row is editable 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "cancelButtonLabel": "No",
        "confirmButtonLabel": "Yes",
        "confirmationMessage": "Are you sure you want to delete all records?",
        "confirmationTitle": "Delete all",
      }
    }
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <ForwardRef(ListItemIcon)
      sx={
        Object {
          "display": Object {
            "sm": "block",
            "xs": "none",
          },
        }
      }
    >
      <Memo(ForwardRef(PeopleIcon)) />
    </ForwardRef(ListItemIcon)>
    <ForwardRef(Grid)
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
    >
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={5}
        xs={10}
      >
        <ForwardRef(ListItemText)
          secondary="Name as published"
          secondaryTypographyProps={
            Object {
              "variant": "caption",
            }
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={5}
        xs={12}
      />
    </ForwardRef(Grid)>
    <ForwardRef(ListItemSecondaryAction)
      classes={
        Object {
          "root": undefined,
        }
      }
    >
      <ForwardRef(ListItemText)
        classes={
          Object {
            "secondary": "undefined test-class-1",
          }
        }
        secondary="Reorder records"
        secondaryTypographyProps={
          Object {
            "variant": "caption",
          }
        }
        sx={
          Object {
            "display": Object {
              "sm": "block",
              "xs": "none",
            },
          }
        }
      />
    </ForwardRef(ListItemSecondaryAction)>
    <ForwardRef(ListItemSecondaryAction)>
      <ForwardRef(Tooltip)
        disableFocusListener={false}
        disableHoverListener={false}
        disableTouchListener={false}
        title="Remove all records"
      >
        <span>
          <ForwardRef(IconButton)
            aria-label="Remove all records"
            disabled={false}
            onClick={[Function]}
            size="large"
          >
            <Memo(ForwardRef(DeleteForeverIcon)) />
          </ForwardRef(IconButton)>
        </span>
      </ForwardRef(Tooltip)>
    </ForwardRef(ListItemSecondaryAction)>
  </ForwardRef(ListItem)>
</Fragment>
`;
