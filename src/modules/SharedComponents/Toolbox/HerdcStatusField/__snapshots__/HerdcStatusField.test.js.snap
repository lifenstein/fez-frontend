// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HerdcStatusField component should render default view 1`] = `
<Memo(NewGenericSelectField)
  error={false}
  errorText=""
  genericSelectFieldId="rek-herdc-status"
  itemsList={
    Array [
      Object {
        "text": "Provisional Code",
        "value": "453220",
      },
      Object {
        "text": "Confirmed Code",
        "value": "453221",
      },
    ]
  }
  locale={
    Object {
      "label": undefined,
    }
  }
  value=""
/>
`;

exports[`HerdcStatusField component should render immutable list as selected value with given field props 1`] = `
<Memo(NewGenericSelectField)
  error={true}
  errorText="Test error"
  genericSelectFieldId="rek-herdc-status"
  input={
    Object {
      "onChange": [MockFunction],
      "value": Immutable.List [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Provisional Code",
        "value": "453220",
      },
      Object {
        "text": "Confirmed Code",
        "value": "453221",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  value={
    Immutable.List [
      "One",
      "Two",
    ]
  }
/>
`;

exports[`HerdcStatusField component should render when given a default value field props 1`] = `
<Memo(NewGenericSelectField)
  defaultValue="afr"
  error={false}
  errorText=""
  genericSelectFieldId="rek-herdc-status"
  itemsList={
    Array [
      Object {
        "text": "Provisional Code",
        "value": "453220",
      },
      Object {
        "text": "Confirmed Code",
        "value": "453221",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  placeholder="Test placeholder"
  value=""
/>
`;

exports[`HerdcStatusField component should render with given field props 1`] = `
<Memo(NewGenericSelectField)
  error={true}
  errorText="Test error"
  genericSelectFieldId="rek-herdc-status"
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Provisional Code",
        "value": "453220",
      },
      Object {
        "text": "Confirmed Code",
        "value": "453221",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  value={
    Array [
      "One",
      "Two",
    ]
  }
/>
`;
