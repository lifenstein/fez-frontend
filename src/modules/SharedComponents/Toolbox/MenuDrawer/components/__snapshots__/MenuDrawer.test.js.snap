// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component MenuDrawer should render CRICOS footer 1`] = `null`;

exports[`Component MenuDrawer should render empty drawer 1`] = `
<ForwardRef(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  id="menudrawer"
  onClose={[MockFunction]}
  open={false}
  variant="temporary"
/>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider 1`] = `
<ForwardRef(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  id="menudrawer"
  onClose={[MockFunction]}
  open={true}
  variant="temporary"
>
  <ForwardRef(List)
    component="nav"
    id="mainMenu"
    tabIndex={-1}
  >
    <ForwardRef(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <ForwardRef(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      >
        <ExternalLink
          className="noHover"
          href="test"
          id="main-menu-logo"
          openInNewIcon={false}
          title="test"
        >
          <div
            className="test"
            style={
              Object {
                "height": 50,
                "margin": "8px auto",
                "width": 160,
              }
            }
          >
            test
          </div>
        </ExternalLink>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sx={
          Object {
            "display": Object {
              "sm": "none",
              "xs": "block",
            },
          }
        }
        xs={2}
      >
        <ForwardRef(IconButton)
          aria-label="Close menu"
          onClick={[MockFunction]}
          size="small"
        >
          <Memo(ForwardRef(KeyboardArrowLeftIcon)) />
        </ForwardRef(IconButton)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
    <span
      className="menu-item-container"
      key="menu-item-0"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-0"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-0"
          primary="Primary text 0"
          secondary="secondary text 0"
        />
      </ForwardRef(ListItem)>
    </span>
    <ForwardRef(Divider)
      key="menu_item_1"
    />
    <span
      className="menu-item-container"
      key="menu-item-2"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-2"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-2"
          primary="Primary text 1"
          secondary="secondary text 1"
        />
      </ForwardRef(ListItem)>
    </span>
  </ForwardRef(List)>
  <div
    id="afterMenuDrawer"
    tabIndex={-1}
  />
  <div>
    CRICOS Provider No: 
    <ExternalLink
      href="http://www.uq.edu.au/about/cricos-link"
      id="cricos"
      openInNewIcon={false}
      title="CRICOS Provider No: "
    >
      00025B
    </ExternalLink>
  </div>
</ForwardRef(Drawer)>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider and skip nav button 1`] = `
<ForwardRef(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  id="menudrawer"
  onClose={[MockFunction]}
  open={true}
  variant="permanent"
>
  <ForwardRef(List)
    component="nav"
    id="mainMenu"
    tabIndex={-1}
  >
    <ForwardRef(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <ForwardRef(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      >
        <ExternalLink
          className="noHover"
          href="test"
          id="main-menu-logo"
          openInNewIcon={false}
          title="test"
        >
          <div
            className="test"
            style={
              Object {
                "height": 50,
                "margin": "8px auto",
                "width": 160,
              }
            }
          >
            test
          </div>
        </ExternalLink>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sx={
          Object {
            "display": Object {
              "sm": "none",
              "xs": "block",
            },
          }
        }
        xs={2}
      >
        <ForwardRef(IconButton)
          aria-label="Close menu"
          onClick={[MockFunction]}
          size="small"
        >
          <Memo(ForwardRef(KeyboardArrowLeftIcon)) />
        </ForwardRef(IconButton)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
    <div
      aria-label="Skip navigation"
      id="skipNav"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={1}
      type="button"
    >
      <ForwardRef(Button)
        className="skipNavButton"
        color="primary"
        onClick={[Function]}
        tabIndex={-1}
        variant="contained"
      >
        Skip navigation
      </ForwardRef(Button)>
    </div>
    <span
      className="menu-item-container"
      key="menu-item-0"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-0"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-0"
          primary="Primary text 0"
          secondary="secondary text 0"
        />
      </ForwardRef(ListItem)>
    </span>
    <ForwardRef(Divider)
      key="menu_item_1"
    />
    <span
      className="menu-item-container"
      key="menu-item-2"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-2"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-2"
          primary="Primary text 1"
          secondary="secondary text 1"
        />
      </ForwardRef(ListItem)>
    </span>
  </ForwardRef(List)>
  <div
    id="afterMenuDrawer"
    tabIndex={-1}
  />
  <div>
    CRICOS Provider No: 
    <ExternalLink
      href="http://www.uq.edu.au/about/cricos-link"
      id="cricos"
      openInNewIcon={false}
      title="CRICOS Provider No: "
    >
      00025B
    </ExternalLink>
  </div>
</ForwardRef(Drawer)>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider and skip nav button 2`] = `
<ForwardRef(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  id="menudrawer"
  onClose={[MockFunction]}
  open={true}
  variant="permanent"
>
  <ForwardRef(List)
    component="nav"
    id="mainMenu"
    tabIndex={-1}
  >
    <ForwardRef(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <ForwardRef(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      >
        <ExternalLink
          className="noHover"
          href="test"
          id="main-menu-logo"
          openInNewIcon={false}
          title="test"
        >
          <div
            className="test"
            style={
              Object {
                "height": 50,
                "margin": "8px auto",
                "width": 160,
              }
            }
          >
            test
          </div>
        </ExternalLink>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sx={
          Object {
            "display": Object {
              "sm": "none",
              "xs": "block",
            },
          }
        }
        xs={2}
      >
        <ForwardRef(IconButton)
          aria-label="Close menu"
          onClick={[MockFunction]}
          size="small"
        >
          <Memo(ForwardRef(KeyboardArrowLeftIcon)) />
        </ForwardRef(IconButton)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
    <div
      aria-label="Skip navigation"
      id="skipNav"
      onClick={[Function]}
      onKeyPress={[Function]}
      tabIndex={1}
      type="button"
    >
      <ForwardRef(Button)
        className="skipNavButton"
        color="primary"
        onClick={[Function]}
        tabIndex={-1}
        variant="contained"
      >
        Skip navigation
      </ForwardRef(Button)>
    </div>
    <span
      className="menu-item-container"
      key="menu-item-0"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-0"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-0"
          primary="Primary text 0"
          secondary="secondary text 0"
        />
      </ForwardRef(ListItem)>
    </span>
    <ForwardRef(Divider)
      key="menu_item_1"
    />
    <span
      className="menu-item-container"
      key="menu-item-2"
    >
      <ForwardRef(ListItem)
        button={true}
        id="menu-item-2"
        onClick={[Function]}
      >
        <ForwardRef(ListItemText)
          classes={
            Object {
              "primary": undefined,
              "secondary": undefined,
            }
          }
          id="menu-itemText-2"
          primary="Primary text 1"
          secondary="secondary text 1"
        />
      </ForwardRef(ListItem)>
    </span>
  </ForwardRef(List)>
  <div
    id="afterMenuDrawer"
    tabIndex={-1}
  />
  <div>
    CRICOS Provider No: 
    <ExternalLink
      href="http://www.uq.edu.au/about/cricos-link"
      id="cricos"
      openInNewIcon={false}
      title="CRICOS Provider No: "
    >
      00025B
    </ExternalLink>
  </div>
</ForwardRef(Drawer)>
`;
