// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PublicationSearchForm renders  component 1`] = `
<StandardCard
  title="Search for your publication"
>
  <form
    onSubmit={[MockFunction]}
  >
    <ForwardRef(Grid)
      alignItems="center"
      container={true}
      spacing={2}
    >
      <ForwardRef(Grid)
        item={true}
        xs={12}
      >
        <ForwardRef(Typography)
          gutterBottom={true}
          id="search-description"
        >
          Enter either the publication DOI (e.g. 10.1163/9789004326828), Pubmed Id (e.g. 28131963) or the title of the publication. This will allow us to check whether the record is already in eSpace or is available from another source.
        </ForwardRef(Typography)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm={true}
        xs={12}
      >
        <Field
          aria-describedby="search-description"
          autoComplete="search"
          autoFocus={true}
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "FormHelperTextProps": [Function],
                "InputLabelProps": [Function],
                "InputProps": [Function],
                "SelectProps": [Function],
                "autoComplete": [Function],
                "autoFocus": [Function],
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "color": [Function],
                "defaultValue": [Function],
                "disabled": [Function],
                "error": [Function],
                "fullWidth": [Function],
                "help": [Function],
                "helperText": [Function],
                "id": [Function],
                "inputProps": [Function],
                "inputRef": [Function],
                "label": [Function],
                "margin": [Function],
                "maxRows": [Function],
                "minRows": [Function],
                "multiline": [Function],
                "name": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "placeholder": [Function],
                "required": [Function],
                "rows": [Function],
                "select": [Function],
                "size": [Function],
                "sx": [Function],
                "textFieldId": [Function],
                "type": [Function],
                "value": [Function],
                "variant": [Function],
              },
              "render": [Function],
            }
          }
          fullWidth={true}
          label="Enter DOI, Pubmed Id or Title"
          name="searchQuery"
          required={true}
          textFieldId="search-query"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <ForwardRef(Button)
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[MockFunction]}
          variant="contained"
        >
          Search
        </ForwardRef(Button)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </form>
</StandardCard>
`;

exports[`PublicationSearchForm renders  should display with skip search option 1`] = `
<StandardCard
  title="Search for your publication"
>
  <form
    onSubmit={[MockFunction]}
  >
    <ForwardRef(Grid)
      alignItems="center"
      container={true}
      spacing={2}
    >
      <ForwardRef(Grid)
        item={true}
        xs={12}
      >
        <ForwardRef(Typography)
          gutterBottom={true}
          id="search-description"
        >
          Enter either the publication DOI (e.g. 10.1163/9789004326828), Pubmed Id (e.g. 28131963) or the title of the publication. This will allow us to check whether the record is already in eSpace or is available from another source.
        </ForwardRef(Typography)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm={true}
        xs={12}
      >
        <Field
          aria-describedby="search-description"
          autoComplete="search"
          autoFocus={true}
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "FormHelperTextProps": [Function],
                "InputLabelProps": [Function],
                "InputProps": [Function],
                "SelectProps": [Function],
                "autoComplete": [Function],
                "autoFocus": [Function],
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "color": [Function],
                "defaultValue": [Function],
                "disabled": [Function],
                "error": [Function],
                "fullWidth": [Function],
                "help": [Function],
                "helperText": [Function],
                "id": [Function],
                "inputProps": [Function],
                "inputRef": [Function],
                "label": [Function],
                "margin": [Function],
                "maxRows": [Function],
                "minRows": [Function],
                "multiline": [Function],
                "name": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "placeholder": [Function],
                "required": [Function],
                "rows": [Function],
                "select": [Function],
                "size": [Function],
                "sx": [Function],
                "textFieldId": [Function],
                "type": [Function],
                "value": [Function],
                "variant": [Function],
              },
              "render": [Function],
            }
          }
          fullWidth={true}
          label="Enter DOI, Pubmed Id or Title"
          name="searchQuery"
          required={true}
          textFieldId="search-query"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <ForwardRef(Button)
          color="primary"
          disabled={false}
          fullWidth={true}
          onClick={[MockFunction]}
          variant="contained"
        >
          Search
        </ForwardRef(Button)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <ForwardRef(Button)
          fullWidth={true}
          onClick={[MockFunction]}
          variant="text"
        >
          Skip search
        </ForwardRef(Button)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </form>
</StandardCard>
`;
