// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GrantListEditorRow should have a proper style generator 1`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": "test1",
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should have a proper style generator 2`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": undefined,
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should have a proper style generator 3`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": undefined,
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should render default mobile view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <ForwardRef(Grid)
      container={true}
      spacing={0}
    >
      <ForwardRef(Grid)
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <ForwardRef(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <ForwardRef(Grid)
            item={true}
            sm={5}
            xs={12}
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={3}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  undefined
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={4}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <ForwardRef(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              sx={
                Object {
                  "display": Object {
                    "md": "block",
                    "xs": "none",
                  },
                }
              }
              xs={8}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowUpIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowDownIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={12}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={false}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(DeleteIcon)) />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
        </ForwardRef(ListItemSecondaryAction)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render default view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <ForwardRef(Grid)
      container={true}
      spacing={0}
    >
      <ForwardRef(Grid)
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <ForwardRef(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <ForwardRef(Grid)
            item={true}
            sm={5}
            xs={12}
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={3}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  undefined
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={4}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <ForwardRef(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              sx={
                Object {
                  "display": Object {
                    "md": "block",
                    "xs": "none",
                  },
                }
              }
              xs={8}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowUpIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowDownIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={false}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(DeleteIcon)) />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
        </ForwardRef(ListItemSecondaryAction)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render given grant data 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={Object {}}
    onAction={[Function]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    aria-label="Select hint undefined"
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <ForwardRef(Grid)
      container={true}
      spacing={0}
    >
      <ForwardRef(Grid)
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <ForwardRef(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <ForwardRef(Grid)
            item={true}
            sm={5}
            xs={12}
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined selected-grant",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  testing
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={3}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined selected-grant",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  1234
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={4}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined selected-grant",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  Government
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <ForwardRef(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              sx={
                Object {
                  "display": Object {
                    "md": "block",
                    "xs": "none",
                  },
                }
              }
              xs={8}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
                title="Move up"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Move up"
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowUpIcon))
                      classes={
                        Object {
                          "root": "selected-grant",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
                title="Move down"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Move down"
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowDownIcon))
                      classes={
                        Object {
                          "root": "selected-grant",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
                title="Delete hint"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Delete hint"
                    disabled={false}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(DeleteIcon)) />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
        </ForwardRef(ListItemSecondaryAction)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render given locale 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={Object {}}
    onAction={[Function]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    aria-label="Select hint testing"
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <ForwardRef(Grid)
      container={true}
      spacing={0}
    >
      <ForwardRef(Grid)
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <ForwardRef(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <ForwardRef(Grid)
            item={true}
            sm={5}
            xs={12}
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={3}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  undefined
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={4}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <ForwardRef(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              sx={
                Object {
                  "display": Object {
                    "md": "block",
                    "xs": "none",
                  },
                }
              }
              xs={8}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
                title="Move up"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Move up"
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowUpIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
                title="Move down"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Move down"
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowDownIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
                title="Delete hint"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    aria-label="Delete hint"
                    disabled={false}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(DeleteIcon)) />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
        </ForwardRef(ListItemSecondaryAction)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should show confirmation box 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <ForwardRef(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <ForwardRef(Grid)
      container={true}
      spacing={0}
    >
      <ForwardRef(Grid)
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <ForwardRef(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <ForwardRef(Grid)
            item={true}
            sm={5}
            xs={12}
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={3}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  undefined
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm={4}
            sx={
              Object {
                "display": Object {
                  "sm": "block",
                  "xs": "none",
                },
              }
            }
          >
            <ForwardRef(ListItemText)
              disableTypography={true}
              primary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  
                </ForwardRef(Typography)>
              }
              secondary={
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </ForwardRef(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <ForwardRef(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              sx={
                Object {
                  "display": Object {
                    "md": "block",
                    "xs": "none",
                  },
                }
              }
              xs={8}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowUpIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
              <ForwardRef(Tooltip)
                disableFocusListener={true}
                disableHoverListener={true}
                disableTouchListener={true}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={true}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(KeyboardArrowDownIcon))
                      classes={
                        Object {
                          "root": "",
                        }
                      }
                    />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <ForwardRef(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <ForwardRef(IconButton)
                    disabled={false}
                    onClick={[Function]}
                    size="large"
                  >
                    <Memo(ForwardRef(DeleteIcon)) />
                  </ForwardRef(IconButton)>
                </div>
              </ForwardRef(Tooltip)>
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
        </ForwardRef(ListItemSecondaryAction)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(ListItem)>
</Fragment>
`;
